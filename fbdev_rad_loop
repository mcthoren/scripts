#!/usr/local/bin/zsh

eumetsat_u="https://eumetview.eumetsat.int/static-images/latestImages/"
eumetsat_a=( \
# EUMETSAT_MSG_RGBAirmass_WesternEurope.jpg \
EUMETSAT_MSG_VIS006_WesternEurope.jpg \
EUMETSAT_MSG_IR039_WesternEurope.jpg \
EUMETSAT_MSG_WV062_WesternEurope.jpg \
EUMETSAT_MSG_IR108_WesternEurope.jpg \
EUMETSAT_MSG_H03B_WesternEurope.png \
# EUMETSAT_MSG_RGBNatColour_WesternEurope.jpg \
EUMETSAT_MSG_RGBNatColourEnhncd_WesternEurope.jpg \
EUMETSAT_MSGIODC_RGBNatColourEnhncd_FullResolution.jpg \
EUMETSAT_MSG_RGBNatColourEnhncd_FullResolution.jpg \
)

noaa_fd_east="https://cdn.star.nesdis.noaa.gov/GOES16/ABI/FD/GEOCOLOR/1808x1808.jpg"
noaa_fd_west="https://cdn.star.nesdis.noaa.gov/GOES17/ABI/FD/GEOCOLOR/1808x1808.jpg"
himawari_8="https://rammb.cira.colostate.edu/ramsdis/online/images/latest_hi_res/himawari-8/full_disk_ahi_true_color.jpg"

# let tmpwatch clean up if necessary.
# used fixed dir names. this is a raspberry pi zero whose whole job is this loop.
DDIR="/tmp/loop_dir_a"
EDIR="/tmp/loop_dir_b"
FDIR="/tmp/loop_dir_c"

for t_dir in "${DDIR}" "${EDIR}" "${FDIR}"; do
	[ -d "${t_dir}" ] || mkdir "${t_dir}"
	[ -d "${t_dir}" ] || {
		echo "${t_dir} not found."
		exit 1
	}
done

fim_disp() {
	fim -a "${1}" -c "sleep ${2}; quit;"
}

m_disp() {
	# i don't know where this resolution came from.
	# but it's what my 1024x600 7" pi panel wants to see.
	mplayer -loop "${2}" -vo fbdev2 -fs -zoom -x 1824 -y 984 "${1}"
}

wdl() {
	# Wget DownLoad so i can change options in one place
	# -t: retries [count]
	# -T: network timeout [s]
	# -N check date header to not re-dl the same data over and over
	wget -t 2 -T 8 -N "${@}"
}

while true; do 
	date +%T%Z | figlet -k

	cd "${EDIR}"

	wdl https://www.hamqsl.com/solar101pic.php
	wait
	fim_disp solar101pic.php 8 &

	wdl https://services.swpc.noaa.gov/images/animations/d-rap/global/d-rap/latest.png
	wait
	fim_disp latest.png 8 &

	wdl https://services.swpc.noaa.gov/images/geospace/geospace_1_day.png
	wait
	fim_disp geospace_1_day.png 8 &

	wdl https://services.swpc.noaa.gov/images/ace-mag-swepam-3-day.gif
	wait
	fim_disp ace-mag-swepam-3-day.gif 8 &

	wdl https://services.swpc.noaa.gov/images/ace-epam-3-day.gif
	wait
	fim_disp ace-epam-3-day.gif 8 &

	wdl https://services.swpc.noaa.gov/images/animations/enlil/latest.jpg
	wait
	fim_disp latest.jpg 8 &

	cd "${DDIR}"
	wdl https://services.swpc.noaa.gov/images/animations/ovation/north/latest.jpg
	wait
	fim_disp latest.jpg 8 &

	wdl https://services.swpc.noaa.gov/images/animations/ctipe/tec/latest.png
	wait
	fim_disp latest.png 8 &

	wdl https://services.swpc.noaa.gov/images/station-k-index.png
	wait
	fim_disp station-k-index.png 8 &

	wdl https://services.swpc.noaa.gov/images/station-a-index.png
	wait
	fim_disp station-a-index.png 8 &

	wdl https://services.swpc.noaa.gov/images/swx-overview-large.gif
	wait
	fim_disp swx-overview-large.gif 8 &

	wdl https://services.swpc.noaa.gov/images/notifications-in-effect-timeline.png
	wait
	fim_disp notifications-in-effect-timeline.png 8 &

	cd "${FDIR}"
	wdl https://services.swpc.noaa.gov/images/animations/suvi/primary/284/latest.png
	wait
	fim_disp latest.png 8 &
	cd "${DDIR}"

	# this is updated with a cron job
	wait
	fim_disp /tmp/mgii_index.png 8 &

	wdl "https://www.seattle.gov/trafficcams/images/5_Pine_EW.jpg"
	convert 5_Pine_EW.jpg -fill yellow -pointsize 24 -annotate +450+25 \
		"$(TZ=:America/Los_Angeles date "+%F %T%Z")" 5_Pine_EW.sea_date.jpg
	wait
	fim_disp 5_Pine_EW.sea_date.jpg 8 &

	wdl "https://www.seattle.gov/trafficcams/images/2_Pike_NS.jpg"
	convert 2_Pike_NS.jpg -font DejaVu-Sans -fill "#ffffff" -stroke black -strokewidth 1 \
		-pointsize 48 -annotate +572+90 "$(TZ=:America/Los_Angeles date "+%F %T%Z")" \
		2_Pike_NS.sea_date.jpg
	wait
	fim_disp 2_Pike_NS.sea_date.jpg 8 &

	wdl "https://www.seattle.gov/trafficcams/images/1_Yesler_EW.jpg"
	convert 1_Yesler_EW.jpg -fill white -font DejaVu-Sans-Bold -fill "#ffffff" -stroke black \
		-strokewidth 1 -pointsize 24 -annotate +370+55 \
		"$(TZ=:America/Los_Angeles date "+%F %T%Z")" 1_Yesler_EW.sea_date.jpg
	wait
	fim_disp 1_Yesler_EW.sea_date.jpg 8 &

	wdl "https://www.berlin.de/webcams/rathaus/webcam.jpg"
	convert webcam.jpg -fill yellow -pointsize 16 -annotate +1103+45 "Roten Rathaus" rathaus_label.jpg
	wait
	fim_disp rathaus_label.jpg 8 &

	cd "${FDIR}"
	wdl "https://www.berlin.de/webcams/fsz/webcam.jpg"
	convert webcam.jpg -fill yellow -pointsize 16 -annotate +1103+45 "Fernsehzentrum" fsz_label.jpg
	wait
	fim_disp fsz_label.jpg 8 &
	cd "${DDIR}"

	wdl "https://www.dwd.de/DWD/wetter/aktuell/deutschland/webcam/wkam1-10962-o.jpg"
	wait
	wget -t 1 -T 4 -qO - "https://wttr.in/Berlin?m" > /dev/tty0
	fim_disp wkam1-10962-o.jpg 8 &

	wdl "https://www.dwd.de/DWD/wetter/aktuell/deutschland/webcam/wkam1-10962-s.jpg"
	wait
	fim_disp wkam1-10962-s.jpg 8 &

	wdl "https://www.dwd.de/DWD/wetter/aktuell/deutschland/webcam/wkam1-10962-w.jpg"
	wait
	fim_disp wkam1-10962-w.jpg 8 &

	wdl "https://www.dwd.de/DWD/wetter/aktuell/deutschland/webcam/webcam_sfh.jpg"
	wait
	fim_disp webcam_sfh.jpg 8 &

	wdl "https://www.yr.no/en/content/2-2950159/meteogram.svg"
	convert meteogram.svg meteogram.png
	wait
	fim_disp meteogram.png 12 &

	xplanet -geometry 1824x984 -output /tmp/ber_sun.png -projection rectangular -num_times 1
	convert /tmp/ber_sun.png -fill yellow -pointsize 36 -annotate +650+720 \
		"$(/home/ghz/scripts/py_sun_times)" -fill red -annotate +10+40 \
		"$(date "+%F %T%Z")" -annotate +1400+40 \
		"$(TZ=":Europe/Berlin" date "+%F %T%Z")" /tmp/ber_sun_label.png
	wait
	fim_disp /tmp/ber_sun_label.png 10 &

	for m in $eumetsat_a; do
		wdl "${eumetsat_u}/${m}"
		[ -s "${m}" ] && {
			wait
			fim_disp "${m}" 8 &
		}
	done

	# thanks to noaa for making this so easy
	wdl "${noaa_fd_east}"
	[ -s 1808x1808.jpg ] && {
		wait
		fim_disp 1808x1808.jpg 16 &
	}

	cd "${EDIR}"
	wdl "${noaa_fd_west}"
	[ -s 1808x1808.jpg ] && {
		wait
		fim_disp 1808x1808.jpg 16 &
	}
	cd "${DDIR}"

	wdl "${himawari_8}"
	[ -s full_disk_ahi_true_color.jpg ] && {
		wait
		fim_disp full_disk_ahi_true_color.jpg 16 &
	}

	# from a cron job. fim displays the description at the bottom, so the image is automatically attributed.
	[ -s "/tmp/epic/epic_nat_latest.png" ] && {
		wait
		fim_disp "/tmp/epic/epic_nat_latest.png" 8 &
	}

	[ -s "/tmp/epic/epic_enh_latest.png" ] && {
		wait
		fim_disp "/tmp/epic/epic_enh_latest.png" 8 &
	}

	wdl "https://vistar-capture.s3.cern.ch/lhc1.png"
	wait
	fim_disp "lhc1.png" 8 &

	wdl "https://vistar-capture.s3.cern.ch/lhc2.png"
	wait
	fim_disp "lhc2.png" 8 &

	wdl "https://vistar-capture.s3.cern.ch/lhc3.png"
	wait
	fim_disp "lhc3.png" 8 &

	wdl https://www.dwd.de/DWD/wetter/radar/radfilm_brd_akt.gif
	# 1 loops takes us > 40s. the image updates every 5min (i think).
	wait
	m_disp radfilm_brd_akt.gif 1 &

	wdl https://www.dwd.de/DWD/wetter/radar/radfilm_bbb_akt.gif
	wait
	wget -t 1 -T 4 -qO - "https://wttr.in/Moon?m" > /dev/tty0
	m_disp radfilm_bbb_akt.gif 2 &
done
