#!/usr/local/bin/zsh

hsn_lech="https://www.hnd.bayern.de/webservices/graphik.php?cache=hnd&statnr=12003500&thema=hochwasser.meldestufen&wert=wasserstand&vhs=false"
seb_kap_wert0="https://www.hnd.bayern.de/webservices/graphik.php?cache=hnd&statnr=12402007&thema=hochwasser.meldestufen&wert=wasserstand&vhs=false&days=2"
b_hof_wert1="https://www.hnd.bayern.de/webservices/graphik.php?cache=hnd&statnr=12405005&thema=hochwasser.meldestufen&wert=wasserstand&vhs=false&days=2"
trk_wert2="https://www.hnd.bayern.de/webservices/graphik.php?cache=hnd&statnr=12406008&thema=hochwasser.meldestufen&wert=wasserstand&vhs=false&days=2"

eumetsat_u="https://eumetview.eumetsat.int/static-images/latestImages/"
eumetsat_a=( \
# EUMETSAT_MSG_RGBAirmass_WesternEurope.jpg \
EUMETSAT_MSG_VIS006_WesternEurope.jpg \
EUMETSAT_MSG_IR039_WesternEurope.jpg \
EUMETSAT_MSG_WV062_WesternEurope.jpg \
EUMETSAT_MSG_IR108_WesternEurope.jpg \
EUMETSAT_MSG_H03B_WesternEurope.png \
# EUMETSAT_MSG_RGBNatColour_WesternEurope.jpg \
EUMETSAT_MSG_RGBNatColourEnhncd_WesternEurope.jpg \
EUMETSAT_MSGIODC_RGBNatColourEnhncd_FullResolution.jpg \
EUMETSAT_MSG_RGBNatColourEnhncd_FullResolution.jpg \
)

noaa_fd_east="https://cdn.star.nesdis.noaa.gov/GOES16/ABI/FD/GEOCOLOR/1808x1808.jpg"
noaa_fd_west="https://cdn.star.nesdis.noaa.gov/GOES17/ABI/FD/GEOCOLOR/1808x1808.jpg"
himawari_8="https://rammb.cira.colostate.edu/ramsdis/online/images/latest_hi_res/himawari-8/full_disk_ahi_true_color.jpg"

# let tmpwatch clean up if necessary.
# used fixed dir names. this is a raspberry pi zero whose whole job is this loop.
DDIR="/tmp/loop_dir_a"
EDIR="/tmp/loop_dir_b"
FDIR="/tmp/loop_dir_c"

for t_dir in "${DDIR}" "${EDIR}" "${FDIR}"; do
	[ -d "${t_dir}" ] || mkdir "${t_dir}"
	[ -d "${t_dir}" ] || {
		echo "${t_dir} not found."
		exit 1
	}
done

D_LOCK="${FDIR}/dlock"
[ -e "${D_LOCK}" ] && rm "${D_LOCK}"

# catch 1 2 3 15
trap cleanup SIGHUP SIGINT SIGQUIT SIGTERM

cleanup () {
	[ -e "${D_LOCK}" ] && rm "${D_LOCK}"
	trap - SIGHUP SIGINT SIGQUIT SIGTERM
	exit 0
}

fim_bar() {
	while [ -e "${D_LOCK}" ]; do
		sleep 1
	done
	# we always call fim_bar before fim_disp
	# the script can actually make a lot of progress before fim_disp locks so relock here
	touch "${D_LOCK}"
}

fim_disp() {
	touch "${D_LOCK}"
	fim -a "${1}" -c "sleep ${2}; quit;"
	[ -e "${D_LOCK}" ] && rm "${D_LOCK}"
}

m_disp() {
	touch "${D_LOCK}"
	# i don't know where this resolution came from. but it's what my 1024x600 7" pi panel wants to see.
	mplayer -loop "${2}" -vo fbdev -fs -zoom -x 1824 -y 984 "${1}"
	[ -e "${D_LOCK}" ] && rm "${D_LOCK}"
}

while true; do 
	cd "${EDIR}"
	wget -N https://services.swpc.noaa.gov/images/animations/d-rap/global/d-rap/latest.png
	fim_bar
	fim_disp latest.png 8 &

	wget -N https://services.swpc.noaa.gov/images/geospace/geospace_1_day.png
	fim_bar
	fim_disp geospace_1_day.png 8 &

	wget -N https://services.swpc.noaa.gov/images/animations/enlil/latest.jpg
	fim_bar
	fim_disp latest.jpg 8 &

	cd "${DDIR}"
	wget -N https://services.swpc.noaa.gov/images/animations/ovation/north/latest.jpg
	fim_bar
	fim_disp latest.jpg 8 &

	wget -N https://services.swpc.noaa.gov/images/animations/ctipe/tec/latest.png
	fim_bar
	fim_disp latest.png 8 &

	wget -N https://services.swpc.noaa.gov/images/planetary-k-index.gif
	fim_bar
	fim_disp planetary-k-index.gif 8 &

	cd "${FDIR}"
	wget -N https://services.swpc.noaa.gov/images/animations/suvi/primary/284/latest.png
	fim_bar
	fim_disp latest.png 8 &
	cd "${DDIR}"

	# this is updated with a cron job
	fim_bar
	fim_disp /tmp/mgii_index.png 8 &

	wget "${hsn_lech}" -O lech.png
	convert lech.png -font arial -pointsize 16 label:'Wasserstand Haunstetten / Lech' \
		-gravity Center -append lech_label.png
	fim_bar
	fim_disp lech_label.png 8 &

	wget "${seb_kap_wert0}" -O wert0.png
	convert wert0.png -font arial -pointsize 16 label:'Wasserstand Sebastianskapelle / Wertach' \
		-gravity Center -append wert0_label.png
	fim_bar
	fim_disp wert0_label.png 8 &

	wget "${b_hof_wert1}" -O wert1.png
	convert wert1.png -font arial -pointsize 16 label:'Wasserstand Biessenhofen / Wertach' \
		-gravity Center -append wert1_label.png
	fim_bar
	fim_disp wert1_label.png 8 &

	wget "${trk_wert2}" -O wert2.png
	convert wert2.png -font arial -pointsize 16 label:'Wasserstand Türkheim / Wertach' \
		-gravity Center -append wert2_label.png
	fim_bar
	fim_disp wert2_label.png 8 &

	wget -N "https://www.yr.no/nb/utskrift/værvarsel/2-2954172/Tyskland/Bayern/Swabia/Augsburg"
	pdftocairo -png Augsburg aux
	convert -crop 1190x600+20+220 aux-1.png out1190.600.20.220.png
	fim_bar
	fim_disp out1190.600.20.220.png 12 &

	TZ=":Europe/Berlin" xplanet -geometry 1824x984 -output /tmp/aux_sun.png -label \
		-projection rectangular -date_format '%F %T %Z' -num_times 1
	convert /tmp/aux_sun.png -fill yellow -pointsize 36 -annotate +670+730 \
		"$(/home/ghz/scripts/py_sun_times)" /tmp/aux_sun_label.png
	fim_bar
	fim_disp /tmp/aux_sun_label.png 8 &

	for m in $eumetsat_a; do
		wget -N "${eumetsat_u}/${m}"
		[ -s "${m}" ] && {
			fim_bar
			fim_disp "${m}" 8 &
		}
	done

	# thanks to noaa for making this so easy
	wget -N "${noaa_fd_east}"
	[ -s 1808x1808.jpg ] && {
		fim_bar
		fim_disp 1808x1808.jpg 16 &
	}

	cd "${EDIR}"
	wget -N "${noaa_fd_west}"
	[ -s 1808x1808.jpg ] && {
		fim_bar
		fim_disp 1808x1808.jpg 16 &
	}
	cd "${DDIR}"

	wget -N "${himawari_8}"
	[ -s full_disk_ahi_true_color.jpg ] && {
		fim_bar
		fim_disp full_disk_ahi_true_color.jpg 16 &
	}

	# from a cron job. fim displays the description at the bottom, so the image is automatically attributed.
	[ -s "/tmp/epic/epic_nat_latest.png" ] && {
		fim_bar
		fim_disp "/tmp/epic/epic_nat_latest.png" 8 &
	}

	[ -s "/tmp/epic/epic_enh_latest.png" ] && {
		fim_bar
		fim_disp "/tmp/epic/epic_enh_latest.png" 8 &
	}

	wget -N https://www.dwd.de/DWD/wetter/radar/radfilm_brd_akt.gif
	# 1 loops takes us > 40s. the image updates every 5min (i think).
	fim_bar
	m_disp radfilm_brd_akt.gif 1 &

	wget -N https://www.dwd.de/DWD/wetter/radar/radfilm_bay_akt.gif
	fim_bar
	m_disp radfilm_bay_akt.gif 2 &
done
